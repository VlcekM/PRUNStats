@inherits LayoutComponentBase

@inject NavigationManager _navigationManager

<MudThemeProvider Theme="@_theme" IsDarkMode />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="0">
        <MudImage Src="images\logo_500px.png" Width="40" Height="40" />
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudText Typo="Typo.h5" Class="ml-3 shades-text text-white">Prosperous Universe Statistics</MudText>
        </MudHidden>
        <MudToolBar>
            <MudButton Href="@RouteConstants.Home"
                       Color="Color.Inherit" 
                       Style="text-transform: none;"
                       Variant="Variant.Text"
                       Class="@GetActiveClass(RouteConstants.Home)"
            >Home</MudButton>
            <MudButton Href="@RouteConstants.CompanyList"
                    Color="Color.Inherit" 
                    Style="text-transform: none;"
                    Variant="Variant.Text"
                    Class="@GetActiveClass(RouteConstants.CompanyList)"
            >Companies</MudButton>
        </MudToolBar>
        <MudSpacer />
        <MudIconButton Href="https://github.com/VlcekM/PRUNStats" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private MudTheme? _theme = null;

    private string GetActiveClass(string href)
    {
        var active = "mud-chip-text mud-chip-color-secondary mx-1 px-3";
        var inactive = "mx-1 px-3";

        if (href == "/") return _navigationManager.Uri == _navigationManager.BaseUri ? active : inactive;
        return _navigationManager.Uri.Contains(href) ? active : inactive;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new MudTheme
        {
            PaletteDark = _darkPalette,
            Typography = new Typography()
            {
                H2 = new H2
                {
                    FontWeight = 500
                },
                Subtitle1 = new Subtitle1
                {
                    FontSize = "1.5rem"
                },
            },
            LayoutProperties = new LayoutProperties()
        };
    }

   private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#3fa2de",
        Secondary = "#f7a600",
        Tertiary = "#bbbbbb",
        Surface = "#333333",
        Background = "#222222",
        BackgroundGray = "#2A2A2A",
        AppbarText = "#aaaaaa",
        AppbarBackground = "#1E1E1Ecc",
        DrawerBackground = "#1E1E1Ecc",
        ActionDefault = "#aaaaaa",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#bbbbbb",
        TextSecondary = "#bbbbbb",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#aaaaaa",
        DrawerText = "#aaaaaa",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#444444",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };
}


